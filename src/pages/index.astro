---
import Layout from '@layouts/Layout.astro';
import Section from '@components/Section.astro';
import Main from '@components/Main.astro';
import Heading from '@components/Heading.astro';
import Media from '@components/Media.astro';
import Callout from '@components/Callout.astro';
import Complement from '@components/Complement.astro';
---

<Layout title="Mise en mode" description="Placement in mode, the practical application of form following function.">
	<Main>
		<Section split>
			<p>The following is a recap of a year long research and development journey revealing how we might take semantic responsibility away from design tokens. I will attempt to demonstrate how we might execute design decisions not through complex token naming exercises, but by burdening these rectangles with glorious purpose.</p>
		</Section>
		<Section>
			<p>A year ago, at the time of this writing, my wife and I were invited to attend Schema 2022, Figma's design systems conference in New York. There were a collection of several great talks throughout the day. <a href="https://youtu.be/On3w6zPQPHU?si=882hkcmS2zsuR2Yp">One of these talks was by Lauren LoPrete</a>, who walks the audience down her path of growing influence in her teams. Her talk echoes a common statement within our practice; “design systems are for people” which I wholeheartedly agree with. All of the tokens and components we spend time with everyday will mean nothing without adoption. So building trustworthy relationships is key to success in our practice.</p>

			<p>The final slide of Lauren's talk ends with the following sentence: “They're just rectangles on the internet.”</p>

			<Media src="/media/schema.png" alt="">
				“Expanding your Design System's sphere of influence and other lessons” - Lauren LoPrete, schema by Figma 2022
			</Media>

			<p>There's a collective chuckle from the crowd, myself included. It's common for folks to joke about the work we do.</p>

			<p>However, in retrospect, I wouldn't have been in that room without rectangles. My career, which puts a roof over my head and food on the table, would have been completely different without rectangles. I wouldn't have met my wife without them. The work that we do with rectangles is truly changing humanity every day. In reality, rectangles make the world go round, socio-economically speaking. I didn't know it then but I was about to discover that these rectangles could also be a looking glass to a whole new design paradigm.</p>

		</Section>

		<Section slide>
			<Media src="/media/tweet-hand.mp4" alt="">
				Tweet by Charles Patterson @charlespattson
			</Media>	
		</Section>

		<Section slide>
			<Media src="/media/token-naming.png" alt="">
				A small selection of token naming articles
			</Media>	
		</Section>

		<Section split>
			<p>There's no shortage of articles on token naming, <a href="https://blog.damato.design/posts/tokens-as-intents/">even I have one</a>. If you don't have an opinion about naming tokens, are you even interested in design systems? While I won't go into opinions about the best naming scheme here, I was frustrated with one particular recommendation that I kept seeing across the web. So much so, that I did what all of us do when we are angry at the internet; <a href="https://blog.damato.design/posts/ondark-virus/">I wrote a blog post</a>.</p>

			<Media float src="/media/pricing.png" alt="">
				Pricing page with different tiers
			</Media>

			<p>Here we have a section of a pricing page. It has some text, links, and a button. What many folks who use tokens might do is create tokens that describe the concept of inverse, highlight, or accent to support the difference between each of the cards and the rest of the page. Text onaccent, button background onaccent, etc. After all it is just a small part of the larger experiences, what harm could be done?</p>
				
			<p>While that might seem reasonable at first, things may get out of hand over time. What happens when we add a text input? Maybe that input has an error that needs to be displayed? How do you account for that?</p>

			<p>If your answer is more tokens, you're going to find that you'll end up trying to have an onaccent version of every semantic token you have. You'll have to cover every possibility of each element appearing in this accented area of the page; at least doubling your token set. I don't know about you, but I'm trying to maintain <em>fewer</em> tokens, not more.</p>
		</Section>

		<Section>
			<p>What I recommend is to instead consider each card as a separate mini-region which creates a scope of new values. There's a few benefits to this, one of which is <strong>no new tokens</strong>. The button background continues to use the button background token just with a new value applied in the same way that you might apply new values for dark mode.</p>

			<Media src="/media/pricing-tokens.png" alt="">
				Pricing page marked with treatments and tokens
			</Media>

			<p>In this way, each card is a boundary for new values for the same elements. It's functionally the same text, links, and button just visually changed by existing within a new scope.</p>

			<p>Keep this idea, put it in your pocket, and save it for later.</p>
		</Section>
		
		<Section slide>
			<Complement view="start">
				Looking top down, small field-of-view
			</Complement>
		</Section>

		<Section slide>
			<Complement view="end">
				Adding space between the colored objects
			</Complement>
		</Section>

		<Section slide>
			<Complement view="move">
				Creating space between objects by moving
			</Complement>
		</Section>

		<Section slide>
			<Complement view="zoom">
				Creating space by zooming the field-of-view
			</Complement>
		</Section>

		<Section split>

			<p>That blog post was simply meant as a response to a repeated harmful practice. At the time, <a href="https://complementary.space/">my real focus</a> was how we might expand other themable properties into semantic naming. Is semantic naming for border radius possible? Spoiler, <a href="https://blog.damato.design/posts/meaningless-curves/">no it's not</a>, but what about spacing?</p>

			<p>Spacing tokens in many design systems are either published as T-shirt sizing or propotional amounts, neither of which are semantic; <strong>the names of these tokens give no indication about where to use them</strong>. My focus was to find if there was a way to mark where space should be applied, influenced later by a set of design decision values.</p>

			<Complement float alt="">
				Creating space can occur either way
			</Complement>

			<p>In this example, there are two colored objects in the image with some space between restricted by a narrow field-of-view. One way we could create more space between these objects is by physically translating them in the environment to be further from each other. However, there is another way. We can make the objects appear farther from each other by <em>zooming the camera</em>. This allows us to set the objects at a fixed distance and change the viewport to adjust the perceived amount of space between the objects.</p>

			<p>In practice, what this could mean is applying single spacing token that means "space goes here" and then we determine how much space by deciding "how much zoom". In this way, <strong>we no longer need to have naming at all</strong> if the density increases as you go deeper into the interface and areas are simply marked to go one step down. Going multiple levels at once is a matter of nesting multiple regions. This is appropriate because as areas become smaller, the amount of room to place items becomes less and content appears more dense.</p>

			<p>Importantly this isn't recommending to change the scale of the elements, just the space between those elements. Think of being able to only affect the space, without changing the visual size of the objects themselves.</p>
		</Section>

		<Section>
			<p>Through these separate units of work I soon realized that both were using the same technique of changing token values depending on a targeted scope. From here I wanted to understand the fundamental prinicples I was uncovering so that it was clear when tokens were meant to drive design decisions and when scope should be considered instead.</p>
		</Section>
		<Section split>
			<p>What I've found is that breaking down interface design into the foundational concepts of layout, content, and appearance help clearly define the responsibilities.</p>

			<p>Layout is the most important one of these. You cannot change appearance without having elements in the layout to provide style and you cannot place content without it immediately becoming layout.</p>

			<Media float src="/media/wireframes.png" alt="">
				Layouts, represented as wireframes, are the key to identifying responsibilities.
			</Media>

			<p>The value of a layout is an element which must eventually contain content with appearance; best represented as a wireframe. When we choose elements for a layout, we are (hopefully) adding them with purpose, hierarchy, and user input in mind.</p>
			
			<p>As an example, the layout of a social media site should both be immediately identifiable and different from the layout of a calendar application to be the most successful. Even when the layout does change in the case of right-to-left languages, the purpose, hierarchy and user input of the elements should not.</p>

		</Section>
		<Section>
			<p>Modes are different interpretations of the user input by the system, depending on the state which is active.</p>

			<Callout cite="Mode, Nielsen Norman Group (NN/G)" href="https://www.nngroup.com/articles/modes/">
				Same input, different results.
			</Callout>

			<p>In the way we have begun to use the term within the design system practice, it is no longer only user input that could change the results, but a configuration of the system itself. Consider the password field with a hidden input as a mode provided by the system. Another way to think of this of input is via tokens; the user applies the same token but the interface renders a different result because of the active mode.</p>

			<p>From here we can use a mode to describe a change that needs to affect the entire page or (more innovately) part of the page. This area needs to be dense, this needs to standout, this needs to show another brand. From here what's stopping us from putting a mode <em>inside</em> a mode?</p>

		</Section>

		<Section slide>
			<Media float src="/media/xzibit.png" alt=""/>
		</Section>

		<Section split>
			<p>That's why I've have called this technique "<strong>mise en mode</strong>" meaning placement in mode. A play on the art history term <a href="https://en.wikipedia.org/wiki/Mise_en_abyme">mise en abyme</a>, which is act of creating smaller artwork within a larger work of art. In this idea, an experience is designed as a nested collection of modes, each with a specific purpose for being there by design. Each mode provides new values to existing tokens based on that purpose. This means that the semantics are moved from the tokens, to these new rectangular boundaries of the interface. Now the tokens are then simplified to naming categories and properties.</p>

			<p>This isn't too far from wanting container queries after having media queries in a component driven architecture. We want micro experiences to be self contained and work within a larger experience.</p>

			<Callout float>There is no critical button,<br> only a button in a critical mode.</Callout>

			<p>Taking this a step further, and maybe too far for some but, perhaps there is no critical button, only a button that exists in a critical mode. When a double confirm modal appears the content of that modal is meant to display as wholly critical. It is not just the button. Therefore we could treat the entire region as critical and adjust the appearance through the scoping the token values to this boundary.</p>
		</Section>

		<Section>
			<Media src="/media/github-danger.png" alt="">
				A critical "mode" within the larger page at Github.com
			</Media>
		</Section>

		<Section>
			<p>So how might we determine when something should be a token versus a mode? If the concept exists across modes, it is a good candidate to be a token. A button will exist across modes, but a state (eg., critical) could be considered a specific mode.</p>
				
			<p>Be careful. Hierarchy is not state but structure and should persist between modes. Primary and secondary are herarchical. The lowest fidelity wireframes will help suggest the difference and inform necessary tokens. Wireframes are effectively a modeless representation of the experience. So the best way to name your tokens is to audit your lowest fidelity wireframes, identify the elements, and group them by purpose.</p>
		</Section>

		<Section>
			<Callout cite="Jakob's Law, Nielsen Norman Group (NN/G)" href="https://www.nngroup.com/videos/jakobs-law-internet-ux/">
				Design for patterns for which users are accustomed.
			</Callout>

			<p>What we aim to achieve in the design system practice is to identify the patterns that have developed across experiences and provide a means for repeating their socially agreeable purpose; a library of functions. The naming convention we provide to tokens is meant to describe how modes can affect the presentation of these functions; a collection of forms. Mise en mode is the practical application of form following function. Tokens describing the presentational qualities of functions. Modes providing the values for that presentation as clearly defined forms.</p>
		</Section>

		<Section>

			<Media src="/media/which-mode.png" alt="">
				The might not be the right question.
			</Media>

		</Section>
	</Main>
</Layout>

<script>
	const observer = new IntersectionObserver((entries) => {
		entries.forEach(({ isIntersecting, target }) => {
			if (isIntersecting) {
			target.setAttribute('aria-current', 'step');
			} else {
			target.removeAttribute('aria-current');
			}
		})
	}, { threshold: .5 });

	function observe(toggle) {
		[...document.querySelectorAll('section')].forEach(($slide) => {
			toggle ? observer.observe($slide) : observer.unobserve($slide)
		});
	}

	const mql = window.matchMedia("(display-mode: browser)");
	mql.onchange = ({ matches }) => observe(!matches);
</script>
