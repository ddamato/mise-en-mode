---
const { media, callout } = Astro.props;
---

<style>
  section {
    --bg-offset: 25%;
    display: flex;
    flex-flow: row-reverse;
    justify-content: center;
    align-items: start;
    padding: calc(var(--unit) * 2);
    gap: calc(var(--unit) * 2);
    background: linear-gradient(.25turn, transparent var(--bg-offset), white var(--bg-offset) 100%);
  }

  section:first-of-type {
    height: calc(var(--unit) * 8);
    margin-inline-start: 0;
    margin-inline-end: auto;
    background: linear-gradient(.25turn, white calc(100% - var(--bg-offset)), transparent calc(100% - var(--bg-offset)));
  }

  section div {
    width: calc(var(--unit) * 10);
  }

  :where(img, video) {
    width: calc(var(--unit) * 10);
  }

  strong {
    font-size: 5em;
    background: #3c2b0f;
    color: #ffb53b;
    line-height: calc(var(--unit) * 2);
    padding-inline: calc(var(--unit) * 1);
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }

  section div:empty {
    display: none;
  }

  section div:empty + :where(img, video) {
    max-width: calc(var(--unit) * 14);
    max-height: calc(var(--unit) * 10);
  }

  @media not (display-mode: browser) {
    
  }
</style>

<section data-media={ Boolean(media) }>
  <div class="content">
    <slot/>
  </div>
  { callout && <strong class="callout">{ callout }</strong> }
  { media ? media.endsWith('mp4')
    ? <video class="media" src={ media } loop autoplay muted />
    : <img class="media" src={ media } /> : null }
</section>