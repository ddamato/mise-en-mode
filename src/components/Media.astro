---
const { src, alt, float } = Astro.props;
---
<style>
  figure {
    margin-block: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-block: calc(var(--unit) * 2);
  }

  figure[data-float] {
    padding: calc(var(--unit) * 2);
    float: left;
    max-width: calc(var(--unit) * 16);
    margin-inline-start: calc(var(--unit) * -10);
  }

  figure div {
    background-image: url('/colored-geometric.jpg');
		background-size: calc(var(--unit) * 12);
		background-position: top center;
		background-attachment: fixed;
		background-color: #c58621;
    max-height: calc(var(--unit) * 10);
    border: 12px solid #c58621;
    border-radius: 24px;
    overflow: hidden;
  }

  :where(img, video) {
    display: block;
    max-width: 100%;
    height: 100%;
    width: 100%;
    backdrop-filter: contrast(0.5) blur(5px);
  }

  figcaption {
    font-size: 1.5rem;
    line-height: 1.2;
    border-radius: 12px;
    background: #ffb53b;
    color: #3c2b0f;
    padding: 0.75em;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    font-weight: 500;
    margin-inline-start: calc(var(--unit) * 2);
    margin-inline-end: 24px;
    align-self: end;
  }

  @media not (display-mode: browser) {
    figure[data-float] {
      float: initial;
      padding-block: 0;
    }
  }
</style>

{ src ? <figure data-float={ Boolean(float) }>
    <div>
      { src.endsWith('mp4')
      ? <video src={ src } title={ alt } loop autoplay muted />
      : <img src={ src } alt={ alt } /> }  
    </div>
    <figcaption>{ alt }</figcaption>
</figure> : null }